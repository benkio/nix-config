name: Scala CI

on:
  push:
    branches:
      - "**"

jobs:
  test-macos:
    runs-on: macos-12
    steps:
      - name: Install nix
        uses: cachix/install-nix-action@v27
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - name: Install channels + nixfmt
        run: |
          nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
          nix-channel --add https://github.com/nix-community/home-manager/archive/master.tar.gz home-manager
          nix-channel --update
          sudo -i nix-channel --add https://nixos.org/channels/nixpkgs-unstable nixpkgs
          sudo -i nix-channel --update nixpkgs
          nix-env -iA nixfmt-rfc-style -f '<nixpkgs>'
          export NIX_PATH=$HOME/.nix-defexpr/channels${NIX_PATH:+:}$NIX_PATH
          nix-shell '<home-manager>' -A install
      - name: Install nix-darwin
        run: |
          sudo rm /etc/nix/nix.conf
          nix-build https://github.com/LnL7/nix-darwin/archive/master.tar.gz -A installer
          ./result/bin/darwin-installer
      # - uses: cachix/cachix-action@v14
      #   with:
      #     name: mycache
      #     # If you chose signing key for write access
      #     signingKey: "${{ secrets.CACHIX_SIGNING_KEY }}"
      #     # If you chose API tokens for write access OR if you have a private cache
      #     authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Formatting
        run: |
          echo this workflow was triggered by ${{github.actor}}
          find . -name '*.nix' | xargs nixfmt -c
      - name: Darwin build
        run: |
          . /etc/static/bashrc
          darwin-rebuild build -I ./MacOs/system/darwin-configuration.nix
      - name: Home-manager build
        run: |
          . /etc/static/bashrc
          home-manager build -I ./MacOs/home/home.nix
